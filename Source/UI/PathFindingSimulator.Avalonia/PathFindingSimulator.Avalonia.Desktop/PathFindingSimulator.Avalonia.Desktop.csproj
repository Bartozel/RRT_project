<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net9.0-windows TFM, one for MacOS with net9.0-macos and one with net9.0 TFM for Linux.-->
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<Platforms>x64</Platforms>

		<OutputPath>..\..\..\..\Build\UI\$(Configuration)\</OutputPath>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
	</PropertyGroup>

	<PropertyGroup>
		<ApplicationManifest>app.manifest</ApplicationManifest>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Avalonia.Desktop" />
		<!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
		<PackageReference Include="Avalonia.Diagnostics">
			<IncludeAssets Condition="'$(Configuration)' != 'Debug'">None</IncludeAssets>
			<PrivateAssets Condition="'$(Configuration)' != 'Debug'">All</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\PathFindingSimulator.Avalonia\PathFindingSimulator.Avalonia.csproj" />
	</ItemGroup>
</Project>
